package ru.tsystems.ecare.persistence.entities;
// default package
// Generated 15.10.2014 12:12:11 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Option generated by hbm2java
 */
@Entity
@Table(name = "option", catalog = "ECareDB", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Option implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6525852005843736270L;
	private Integer id;
	private String name;
	private float rate;
	private Set<Option> optionsForIncompId2 = new HashSet<Option>(0);
	private Set<Option> optionsForRelId2 = new HashSet<Option>(0);
	private Set<Option> optionsForIncompId1 = new HashSet<Option>(0);
	private Set<Option> optionsForRelId1 = new HashSet<Option>(0);
	private Set<Tariff> tariffs = new HashSet<Tariff>(0);
	private Set<Contract> contracts = new HashSet<Contract>(0);

	public Option() {
	}

	public Option(String name, float rate) {
		this.name = name;
		this.rate = rate;
	}

	public Option(String name, float rate, Set<Option> optionsForIncompId2,
			Set<Option> optionsForRelId2, Set<Option> optionsForIncompId1,
			Set<Option> optionsForRelId1, Set<Tariff> tariffs,
			Set<Contract> contracts) {
		this.name = name;
		this.rate = rate;
		this.optionsForIncompId2 = optionsForIncompId2;
		this.optionsForRelId2 = optionsForRelId2;
		this.optionsForIncompId1 = optionsForIncompId1;
		this.optionsForRelId1 = optionsForRelId1;
		this.tariffs = tariffs;
		this.contracts = contracts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "rate", nullable = false, precision = 12, scale = 0)
	public float getRate() {
		return this.rate;
	}

	public void setRate(float rate) {
		this.rate = rate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "incompatible_option", catalog = "ECareDB", joinColumns = { @JoinColumn(name = "incomp_id_1", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "incomp_id_2", nullable = false, updatable = false) })
	public Set<Option> getOptionsForIncompId2() {
		return this.optionsForIncompId2;
	}

	public void setOptionsForIncompId2(Set<Option> optionsForIncompId2) {
		this.optionsForIncompId2 = optionsForIncompId2;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "related_option", catalog = "ECareDB", joinColumns = { @JoinColumn(name = "rel_id_1", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "rel_id_2", nullable = false, updatable = false) })
	public Set<Option> getOptionsForRelId2() {
		return this.optionsForRelId2;
	}

	public void setOptionsForRelId2(Set<Option> optionsForRelId2) {
		this.optionsForRelId2 = optionsForRelId2;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "incompatible_option", catalog = "ECareDB", joinColumns = { @JoinColumn(name = "incomp_id_2", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "incomp_id_1", nullable = false, updatable = false) })
	public Set<Option> getOptionsForIncompId1() {
		return this.optionsForIncompId1;
	}

	public void setOptionsForIncompId1(Set<Option> optionsForIncompId1) {
		this.optionsForIncompId1 = optionsForIncompId1;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "related_option", catalog = "ECareDB", joinColumns = { @JoinColumn(name = "rel_id_2", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "rel_id_1", nullable = false, updatable = false) })
	public Set<Option> getOptionsForRelId1() {
		return this.optionsForRelId1;
	}

	public void setOptionsForRelId1(Set<Option> optionsForRelId1) {
		this.optionsForRelId1 = optionsForRelId1;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tariff_option", catalog = "ECareDB", joinColumns = { @JoinColumn(name = "option_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "tariff_id", nullable = false, updatable = false) })
	public Set<Tariff> getTariffs() {
		return this.tariffs;
	}

	public void setTariffs(Set<Tariff> tariffs) {
		this.tariffs = tariffs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "contract_option", catalog = "ECareDB", joinColumns = { @JoinColumn(name = "option_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "contract_number", nullable = false, updatable = false) })
	public Set<Contract> getContracts() {
		return this.contracts;
	}

	public void setContracts(Set<Contract> contracts) {
		this.contracts = contracts;
	}

}
